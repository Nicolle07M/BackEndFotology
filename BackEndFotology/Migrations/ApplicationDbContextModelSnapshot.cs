// <auto-generated />
using System;
using BackEndFotology.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEndFotology.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackEndFotology.Modelos.Administrador", b =>
                {
                    b.Property<long>("IDadministrador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IDadministrador"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDadministrador");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("BackEndFotology.Modelos.Calificacion", b =>
                {
                    b.Property<int>("IDcalificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDcalificacion"));

                    b.Property<int>("CalificacionValor")
                        .HasColumnType("int");

                    b.Property<int>("IDfotografia")
                        .HasColumnType("int");

                    b.HasKey("IDcalificacion");

                    b.ToTable("Calificaciones");
                });

            modelBuilder.Entity("BackEndFotology.Modelos.Categoria", b =>
                {
                    b.Property<int>("IDcategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDcategoria"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDportafolio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDcategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("BackEndFotology.Modelos.Cliente", b =>
                {
                    b.Property<int>("IDcliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDcliente"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDcliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("BackEndFotology.Modelos.Comentario", b =>
                {
                    b.Property<int>("IDcomentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDcomentario"));

                    b.Property<DateTime?>("FechaComentario")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDcliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDfotografia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDcomentario");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("BackEndFotology.Modelos.Fotografia", b =>
                {
                    b.Property<int>("IDfotografia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDfotografia"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDcalificacion")
                        .HasColumnType("int");

                    b.Property<string>("IDcategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDfotografo")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDfotografia");

                    b.ToTable("Fotografias");
                });

            modelBuilder.Entity("BackEndFotology.Modelos.Fotografo", b =>
                {
                    b.Property<int>("IDfotografo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDfotografo"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotoDePerfil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreFotografo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Portafolio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDfotografo");

                    b.ToTable("Fotografos");
                });

            modelBuilder.Entity("BackEndFotology.Modelos.Portafolio", b =>
                {
                    b.Property<int>("IDportafolio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDportafolio"));

                    b.Property<int>("IDfotografo")
                        .HasColumnType("int");

                    b.Property<string>("NombrePortafolio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDportafolio");

                    b.ToTable("Portafolios");
                });
#pragma warning restore 612, 618
        }
    }
}
